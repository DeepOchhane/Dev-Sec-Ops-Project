name: Secure CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  secure-pipeline:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # üõ°Ô∏è Trivy config scan on docker-compose.yaml
    - name: Scan docker-compose.yaml for misconfigurations
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: config
        scan-ref: ./docker-compose.yaml
        format: table
        exit-code: 1
        severity: CRITICAL,HIGH

    # üê≥ Dockerfile Scan (use Dockle for Dockerfile-specific issues)
    - name: Scan Dockerfile with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: config
        scan-ref: ./backend/Dockerfile
        format: table
        exit-code: 1
        severity: CRITICAL,HIGH

    - name: Create .env for backend
      run: echo "MONGO_URI=${{ secrets.MONGO_URI }}" > ./backend/.env

    # üß± Build all containers
    - name: Build and Start containers
      run: docker compose up --build -d

    # üõ°Ô∏è Trivy scan for backend image
    - name: Scan Backend Image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: newsletter-webapp-backend:latest
        format: table
        exit-code: 1
        severity: CRITICAL,HIGH
        ignore-unfixed: true

    # üõ°Ô∏è Trivy scan for frontend image
    - name: Scan Frontend Image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: newsletter-webapp-frontend:latest
        format: table
        exit-code: 1
        severity: CRITICAL,HIGH
        ignore-unfixed: true

    # (Optional) Scan Mongo official image
    - name: Scan Mongo Image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: mongo:latest
        format: table
        exit-code: 0 # Don't fail on official image

    # üîª Shut down containers
    - name: Stop containers
      if: always()
      run: docker compose down
