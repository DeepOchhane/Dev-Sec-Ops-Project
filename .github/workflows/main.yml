name: Secure CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  Trivy-Scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # ✅ Install Trivy CLI for config and Dockerfile scan
    - name: Install Trivy
      run: |
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

    # 1️⃣ Trivy - Scan docker-compose.yaml for misconfigurations
    - name: Scan docker-compose.yaml
      run: trivy config ./docker-compose.yaml --severity CRITICAL,HIGH

    # 2️⃣ Trivy - Scan Dockerfile for insecure instructions
    - name: Scan Dockerfile
      run: trivy config ./backend/Dockerfile --severity CRITICAL,HIGH

    # 🔐 Setup env for backend
    - name: Create .env for backend
      run: echo "MONGO_URI=${{ secrets.MONGO_URI }}" > ./backend/.env

    # 🐳 Docker Compose Build & Run
    - name: Build and Start containers
      run: docker compose up --build -d

    # 3️⃣ Trivy - Scan Backend Image
    - name: Scan Backend Image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: newsletter-webapp-backend:latest
        format: table
        exit-code: 1
        severity: CRITICAL,HIGH
        ignore-unfixed: true

    # 4️⃣ Trivy - Scan Frontend Image
    - name: Scan Frontend Image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: newsletter-webapp-frontend:latest
        format: table
        exit-code: 1
        severity: CRITICAL,HIGH
        ignore-unfixed: true

    # 🔻 Cleanup (optional)
    - name: Stop containers
      if: always()
      run: docker compose down

  semgrep-scan:
    runs-on: ubuntu-latest
    # needs: secure-pipeline  # ⏳ Waits for security steps to complete

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # 🐍 Python needed for Semgrep
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    # 🕵️‍♂️ Install Semgrep
    - name: Install Semgrep
      run: pip install semgrep

    # 🔍 Run Semgrep static analysis
    - name: Run Semgrep scan
      run: |
        semgrep scan \
          --config auto \
          --severity ERROR \
          --error

  scan:
    runs-on: ubuntu-latest
    name: Security Scanning

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # SEMGREP SCAN (you already added)
      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/default"

      # 🔐 GITLEAKS SCAN
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2.3.3
        with:
          args: --path=. --verbose --redact
