name: Secure CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  Trivy-Scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install Trivy
      run: |
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

    - name: Scan docker-compose.yaml
      run: trivy config ./docker-compose.yaml --severity CRITICAL,HIGH

    - name: Scan Dockerfile
      run: trivy config ./backend/Dockerfile --severity CRITICAL,HIGH

    - name: Create .env for backend
      run: echo "MONGO_URI=${{ secrets.MONGO_URI }}" > ./backend/.env

    - name: Build and Start containers
      run: docker compose up --build -d

    - name: Scan Backend Image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: newsletter-webapp-backend:latest
        format: table
        exit-code: 1
        severity: CRITICAL,HIGH
        ignore-unfixed: true

    - name: Scan Frontend Image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: newsletter-webapp-frontend:latest
        format: table
        exit-code: 1
        severity: CRITICAL,HIGH
        ignore-unfixed: true

    - name: Stop containers
      if: always()
      run: docker compose down

  semgrep-scan:
    runs-on: ubuntu-latest
    needs: Trivy-Scan
    name: Static Code Analysis with Semgrep

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Semgrep
      uses: returntocorp/semgrep-action@v1
      with:
        config: "p/default"

  gitleaks-scan:
    runs-on: ubuntu-latest
    needs: semgrep-scan
    name: Secrets Scan with Gitleaks

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Gitleaks
      uses: gitleaks/gitleaks-action@v2.3.3
      with:
        args: --path=. --verbose --redact
